{"metadata":{"title":"ForEachStore","platforms":[],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:22ComposableArchitecture12ForEachStoreV","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ForEachStore","kind":"identifier"}]},"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","interfaceLanguage":"swift"},"deprecationSummary":[{"inlineContent":[{"text":"Pass 'ForEach' a store scoped to an identified array and identified action, instead. For more information, see the following article: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#Replacing-ForEachStore-with-ForEach]","type":"text"}],"type":"paragraph"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/foreachstore"]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s8SendableP","doc:\/\/ComposableArchitecture\/7SwiftUI18DynamicViewContentP","doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP"],"type":"conformsTo"}],"sections":[],"seeAlsoSections":[{"anchor":"View-containers","title":"View containers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore"],"generated":true}],"abstract":[{"text":"A Composable Architecture-friendly wrapper around ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" that simplifies working with","type":"text"},{"text":" ","type":"text"},{"text":"collections of state.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"kind":"attribute","text":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"EachState"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"EachAction"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Data"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ID"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Content"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Data"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Hashable","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Content"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore"},{"text":" loops over a store’s collection with a store scoped to the domain of each","type":"text"},{"text":" ","type":"text"},{"text":"element. This allows you to extract and modularize an element’s view and avoid concerns around","type":"text"},{"text":" ","type":"text"},{"text":"collection index math and parent-child store communication.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, a todos app may define the domain and logic associated with an individual todo:","type":"text"}]},{"syntax":"swift","code":["@Reducer","struct Todo {","  struct State: Equatable, Identifiable {","    let id: UUID","    var description = \"\"","    var isComplete = false","  }","","  enum Action {","    case isCompleteToggled(Bool)","    case descriptionChanged(String)","  }","","  var body: some Reducer<State, Action> {","    \/\/ ...","  }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"As well as a view with a domain-specific store:"}]},{"syntax":"swift","code":["struct TodoView: View {","  let store: StoreOf<Todo>","  var body: some View { \/* ... *\/ }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For a parent domain to work with a collection of todos, it can hold onto this collection in"},{"type":"text","text":" "},{"type":"text","text":"state:"}]},{"syntax":"swift","code":["@Reducer","struct Todos {","  struct State: Equatable {","    var todos: IdentifiedArrayOf<Todo.State> = []","  }","  \/\/ ...","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Define a case to handle actions sent to the child domain:"}]},{"syntax":"swift","code":["enum Action {","  case todos(IdentifiedActionOf<Todo>)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Enhance its core reducer using"},{"type":"text","text":" "},{"code":"Reducer\/forEach(_:action:element:fileID:filePath:line:column:)-6zye8","type":"codeVoice"},{"type":"text","text":":"}]},{"syntax":"swift","code":["var body: some Reducer<State, Action> {","  Reduce { state, action in","    \/\/ ...","  }","  .forEach(\\.todos, action: \\.todos) {","    Todo()","  }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"And finally render a list of ","type":"text"},{"code":"TodoView","type":"codeVoice"},{"text":"s using ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","isActive":true,"type":"reference"},{"text":":","type":"text"}]},{"syntax":"swift","code":["ForEachStore(","  self.store.scope(state: \\.todos, action: \\.todos)",") { todoStore in","  TodoView(store: todoStore)","}"],"type":"codeListing"}],"kind":"content"}],"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-1cwd0","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-4l45p"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/body","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/data"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/DynamicViewContent-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations"],"generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"url":"\/documentation\/composablearchitecture\/store","type":"topic","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"title":"Store","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/WithViewStore":{"navigatorTitle":[{"text":"WithViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/withviewstore","title":"WithViewStore","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WithViewStore","kind":"identifier"}],"kind":"symbol","type":"topic","deprecated":true,"abstract":[{"text":"A view helper that transforms a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},{"text":" into a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore"},{"text":" so that its state can be observed","type":"text"},{"text":" ","type":"text"},{"text":"by a view builder.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/WithViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/DynamicViewContent-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/foreachstore\/dynamicviewcontent-implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/DynamicViewContent-Implementations","role":"collectionGroup","abstract":[],"title":"DynamicViewContent Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwitchStore":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwitchStore","kind":"identifier"}],"role":"symbol","title":"SwitchStore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","abstract":[{"text":"A view that observes when enum state held in a store changes cases, and provides stores to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","isActive":true,"type":"reference"},{"text":" views.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"SwitchStore","kind":"identifier"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/switchstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","role":"collectionGroup","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/View-Implementations":{"url":"\/documentation\/composablearchitecture\/foreachstore\/view-implementations","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/View-Implementations","type":"topic","role":"collectionGroup","abstract":[],"title":"View Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","title":"ViewStore","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/init(_:content:)-4l45p":{"abstract":[{"type":"text","text":"Initializes a structure that computes views on demand from a store on a collection of data and"},{"type":"text","text":" "},{"type":"text","text":"an identified action."}],"kind":"symbol","role":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-4l45p","url":"\/documentation\/composablearchitecture\/foreachstore\/init(_:content:)-4l45p","title":"init(_:content:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"EachContent"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"IdentifiedArray","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachState"},{"text":">, ","kind":"text"},{"text":"IdentifiedAction","preciseIdentifier":"s:22ComposableArchitecture16IdentifiedActionO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ID","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"typeIdentifier"},{"text":">>, ","kind":"text"},{"text":"content","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Store","preciseIdentifier":"s:22ComposableArchitecture5StoreC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"EachState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"EachAction","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EachContent","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://ComposableArchitecture/7SwiftUI18DynamicViewContentP":{"identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI18DynamicViewContentP","title":"SwiftUICore.DynamicViewContent","type":"unresolvable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IfLetStore":{"navigatorTitle":[{"text":"IfLetStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IfLetStore","url":"\/documentation\/composablearchitecture\/ifletstore","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IfLetStore","kind":"identifier"}],"deprecated":true,"type":"topic","title":"IfLetStore","abstract":[{"text":"A view that safely unwraps a store of optional state in order to show one of two views.","type":"text"}]},"doc://ComposableArchitecture/s8CopyableP":{"title":"Swift.Copyable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore":{"abstract":[{"type":"text","text":"A Composable Architecture-friendly wrapper around "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" that simplifies working with"},{"type":"text","text":" "},{"type":"text","text":"collections of state."}],"title":"ForEachStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ForEachStore"}],"type":"topic","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore","navigatorTitle":[{"text":"ForEachStore","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/foreachstore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/data":{"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"data","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/data","url":"\/documentation\/composablearchitecture\/foreachstore\/data","kind":"symbol","title":"data","deprecated":true,"abstract":[],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationStackStore":{"kind":"symbol","type":"topic","navigatorTitle":[{"text":"NavigationStackStore","kind":"identifier"}],"abstract":[{"text":"A navigation stack that is driven by a store.","type":"text"}],"url":"\/documentation\/composablearchitecture\/navigationstackstore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationStackStore","kind":"identifier"}],"role":"symbol","title":"NavigationStackStore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationStackStore"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/7SwiftUI4ViewP":{"identifier":"doc:\/\/ComposableArchitecture\/7SwiftUI4ViewP","type":"unresolvable","title":"SwiftUICore.View"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/NavigationLinkStore":{"url":"\/documentation\/composablearchitecture\/navigationlinkstore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/NavigationLinkStore","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NavigationLinkStore","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"NavigationLinkStore","kind":"identifier"}],"type":"topic","kind":"symbol","title":"NavigationLinkStore","deprecated":true,"abstract":[{"text":"A view that controls a navigation presentation.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/CaseLet":{"role":"symbol","url":"\/documentation\/composablearchitecture\/caselet","title":"CaseLet","navigatorTitle":[{"kind":"identifier","text":"CaseLet"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/CaseLet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CaseLet"}],"type":"topic","deprecated":true,"kind":"symbol","abstract":[{"type":"text","text":"A view that handles a specific case of enum state in a "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwitchStore","isActive":true,"type":"reference"},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/body":{"role":"symbol","deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/body","url":"\/documentation\/composablearchitecture\/foreachstore\/body","abstract":[],"kind":"symbol","type":"topic","title":"body","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ForEachStore/init(_:content:)-1cwd0":{"role":"symbol","deprecated":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"EachContent"},{"kind":"text","text":">("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:21IdentifiedCollections0A5ArrayV","text":"IdentifiedArray"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachState"},{"kind":"text","text":">, (id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ID"},{"kind":"text","text":", action"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EachAction"},{"kind":"text","text":")>, "},{"kind":"externalParam","text":"content"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture5StoreC","text":"Store"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"EachState"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"EachAction"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EachContent"},{"kind":"text","text":")"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ForEachStore\/init(_:content:)-1cwd0","url":"\/documentation\/composablearchitecture\/foreachstore\/init(_:content:)-1cwd0","kind":"symbol","type":"topic","abstract":[],"title":"init(_:content:)"}}}