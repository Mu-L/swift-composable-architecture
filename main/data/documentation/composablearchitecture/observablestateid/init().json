{"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/composablearchitecture\/observablestateid\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/init()","interfaceLanguage":"swift"},"sections":[],"metadata":{"roleHeading":"Initializer","title":"init()","role":"symbol","externalID":"s:22ComposableArchitecture17ObservableStateIDVACycfc","modules":[{"name":"ComposableArchitecture"}],"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}]}]}],"kind":"symbol","references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","type":"topic","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer/State":{"required":true,"role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"abstract":[{"text":"A type that holds the current state of the reducer.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer\/State","title":"State","url":"\/documentation\/composablearchitecture\/reducer\/state","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID/init()":{"abstract":[],"type":"topic","title":"init()","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID\/init()","role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"url":"\/documentation\/composablearchitecture\/observablestateid\/init()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"kind":"symbol","title":"ObservableState()","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/observablestate()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableStateID":{"abstract":[{"type":"text","text":"A unique identifier for a observed value."}],"type":"topic","url":"\/documentation\/composablearchitecture\/observablestateid","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableStateID","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"ObservableStateID","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableStateID","kind":"identifier"}],"title":"ObservableStateID"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"}}}