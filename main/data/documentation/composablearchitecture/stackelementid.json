{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState"},{"type":"text","text":" type creates instances of this identifier when new elements are added to"},{"type":"text","text":" "},{"type":"text","text":"the stack. This makes it possible to easily look up specific elements in the stack without"},{"type":"text","text":" "},{"type":"text","text":"resorting to positional indices, which can be error prone, especially when dealing with async"},{"type":"text","text":" "},{"type":"text","text":"effects."}],"type":"paragraph"},{"inlineContent":[{"text":"The identifier is backed by a deterministic, generational ID. This allows you to predict how","type":"text"},{"text":" ","type":"text"},{"text":"IDs will be created and allows you to write tests for how features behave in the stack.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["@Test","func basics() {","  var path = StackState<Int>()","  path.append(42)","  XCTAssertEqual(path[id: 0], 42)","  path.append(1729)","  XCTAssertEqual(path[id: 1], 1729)","","  path.removeAll()","  path.append(-1)","  XCTAssertEqual(path[id: 2], -1)","}"],"type":"codeListing"},{"inlineContent":[{"text":"Notice that after removing all elements and appending a new element, the ID generated was 2 and","type":"text"},{"text":" ","type":"text"},{"text":"did not go back to 0. This is because in tests the IDs are ","type":"text"},{"inlineContent":[{"text":"generational","type":"text"}],"type":"emphasis"},{"text":", which means they","type":"text"},{"text":" ","type":"text"},{"text":"keep counting up, even if you remove elements from the stack.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true,"type":"reference"},{"type":"text","text":"."}],"kind":"symbol","identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf"],"generated":true,"title":"Stack-based navigation","anchor":"Stack-based-navigation"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"metadata":{"role":"symbol","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"StackElementID"}],"modules":[{"name":"ComposableArchitecture"}],"externalID":"s:22ComposableArchitecture14StackElementIDV","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackElementID"}],"title":"StackElementID"},"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations"],"generated":true,"title":"Default Implementations","anchor":"Default-Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/stackelementid"]}],"references":{"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID":{"type":"topic","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID","url":"\/documentation\/composablearchitecture\/stackelementid","navigatorTitle":[{"text":"StackElementID","kind":"identifier"}],"role":"symbol","title":"StackElementID","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackElementID","kind":"identifier"}],"abstract":[{"type":"text","text":"An opaque type that identifies an element of "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","isActive":true},{"type":"text","text":"."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"type":"topic","role":"collectionGroup","kind":"article","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackActionOf":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackActionOf","kind":"identifier"}],"title":"StackActionOf","type":"topic","url":"\/documentation\/composablearchitecture\/stackactionof","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackActionOf","role":"symbol","kind":"symbol","abstract":[{"text":"A convenience type alias for referring to a stack action of a given reducerâ€™s domain.","type":"text"}],"navigatorTitle":[{"text":"StackActionOf","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDumpStringConvertible-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDumpStringConvertible-Implementations","url":"\/documentation\/composablearchitecture\/stackelementid\/customdumpstringconvertible-implementations","abstract":[],"role":"collectionGroup","title":"CustomDumpStringConvertible Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/s27ExpressibleByIntegerLiteralP":{"title":"Swift.ExpressibleByIntegerLiteral","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s27ExpressibleByIntegerLiteralP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"type":"topic","title":"Stack-based navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","kind":"article","url":"\/documentation\/composablearchitecture\/stackbasednavigation","abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"text":" ","type":"text"},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"role":"article"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","type":"topic","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","title":"Reducer"},"doc://ComposableArchitecture/10CustomDump0aB17StringConvertibleP":{"title":"CustomDump.CustomDumpStringConvertible","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB17StringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/Equatable-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/stackelementid\/equatable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/Equatable-Implementations","abstract":[],"kind":"article","type":"topic","title":"Equatable Implementations"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP","title":"Swift.Sendable"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"StackAction"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction","role":"symbol","abstract":[{"text":"A wrapper type for actions that can be presented in a navigation stack.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"StackAction"}],"kind":"symbol","title":"StackAction","url":"\/documentation\/composablearchitecture\/stackaction"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/CustomDebugStringConvertible-Implementations":{"title":"CustomDebugStringConvertible Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/CustomDebugStringConvertible-Implementations","abstract":[],"url":"\/documentation\/composablearchitecture\/stackelementid\/customdebugstringconvertible-implementations","type":"topic","role":"collectionGroup","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackState":{"type":"topic","navigatorTitle":[{"text":"StackState","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/stackstate","role":"symbol","abstract":[{"type":"text","text":"A list of data representing the content of a navigation stack."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StackState","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackState","title":"StackState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackElementID/ExpressibleByIntegerLiteral-Implementations":{"role":"collectionGroup","url":"\/documentation\/composablearchitecture\/stackelementid\/expressiblebyintegerliteral-implementations","type":"topic","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackElementID\/ExpressibleByIntegerLiteral-Implementations","kind":"article","title":"ExpressibleByIntegerLiteral Implementations"}}}