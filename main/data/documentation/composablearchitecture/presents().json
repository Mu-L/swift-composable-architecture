{"schemaVersion":{"major":0,"minor":3,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction"],"generated":true,"anchor":"Tree-based-navigation","title":"Tree-based navigation"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"Wraps a property with ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"text":" and observes it.","type":"text"}],"variants":[{"paths":["\/documentation\/composablearchitecture\/presents()"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"],"anchor":"Property-wrapper","title":"Property wrapper"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(accessor, names: named(init), named(get), named(set)) "},{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(peer, names: prefixed(`$`), prefixed(`_`)) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Presents"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this macro instead of "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":" when you adopt the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()"},{"type":"text","text":" "},{"type":"text","text":"macro, which is incompatible with property wrappers like "},{"isActive":true,"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},{"type":"text","text":"."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"kind":"symbol","metadata":{"externalID":"s:22ComposableArchitecture8Presentsyycfm","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Presents","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","title":"Presents()","symbolKind":"macro","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Macro"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","type":"topic","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"role":"symbol","title":"PresentationState","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/presentationstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"kind":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","role":"article","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"title":"Tree-based navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Presents()":{"kind":"symbol","title":"Presents()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Presents","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/presents()","role":"symbol","abstract":[{"text":"Wraps a property with ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"text":" and observes it.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"type":"topic","role":"collectionGroup","kind":"article","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservableState()":{"abstract":[{"text":"Defines and implements conformance of the Observable protocol.","type":"text"}],"kind":"symbol","title":"ObservableState()","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservableState()","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableState","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/composablearchitecture\/observablestate()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction":{"type":"topic","abstract":[{"type":"text","text":"A wrapper type for actions that can be presented."}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/presentationaction","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction","role":"symbol","title":"PresentationAction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"PresentationAction"}],"navigatorTitle":[{"kind":"identifier","text":"PresentationAction"}]}}}