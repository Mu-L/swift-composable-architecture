{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","text":"BindingState","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the projected value to derive bindings from a view store with properties annotated with"},{"type":"text","text":" "},{"type":"codeVoice","code":"@BindingState"},{"type":"text","text":". To get the "},{"type":"codeVoice","code":"projectedValue"},{"type":"text","text":", prefix the property with "},{"type":"codeVoice","code":"$"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["TextField(\"Display name\", text: viewStore.$displayName)"]},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","type":"reference"},{"text":" for more details.","type":"text"}]}]}],"variants":[{"paths":["\/documentation\/composablearchitecture\/bindingstate\/projectedvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"deprecationSummary":[{"inlineContent":[{"type":"text","text":"Deriving bindings directly from stores using '@ObservableState'. See the following migration guide for more information: https:\/\/pointfreeco.github.io\/swift-composable-architecture\/main\/documentation\/composablearchitecture\/migratingto1.7#BindingState"}],"type":"paragraph"}],"abstract":[{"text":"A projection that can be used to derive bindings from a view store.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","metadata":{"symbolKind":"property","title":"projectedValue","modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Instance Property","role":"symbol","platforms":[],"externalID":"s:22ComposableArchitecture12BindingStateV14projectedValueACyxGvp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"BindingState","preciseIdentifier":"s:22ComposableArchitecture12BindingStateV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState\/projectedValue"},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState/projectedValue":{"deprecated":true,"abstract":[{"type":"text","text":"A projection that can be used to derive bindings from a view store."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:22ComposableArchitecture12BindingStateV","text":"BindingState","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/bindingstate\/projectedvalue","title":"projectedValue","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState\/projectedValue","type":"topic","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"abstract":[{"text":"A property wrapper type that can designate properties of app state that can be directly bindable","type":"text"},{"text":" ","type":"text"},{"text":"in SwiftUI views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/bindingstate","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","deprecated":true,"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingState","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"title":"BindingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","role":"collectionGroup","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"}}}