{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState"},"sections":[],"variants":[{"paths":["\/documentation\/composablearchitecture\/presentationstate"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/init(wrappedValue:)"],"generated":true},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/wrappedValue"],"generated":true},{"anchor":"Subscripts","title":"Subscripts","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:_:_:_:_:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-4tcjz","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-8qv25"],"generated":true},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Decodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Encodable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Hashable-Implementations"],"generated":true}],"metadata":{"symbolKind":"struct","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"modules":[{"name":"ComposableArchitecture"}],"roleHeading":"Structure","externalID":"s:22ComposableArchitecture17PresentationStateV","title":"PresentationState"},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/Se","doc:\/\/ComposableArchitecture\/SE","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH","doc:\/\/ComposableArchitecture\/s8SendableP"],"type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@dynamicMemberLookup","kind":"attribute"},{"text":" ","kind":"text"},{"text":"@propertyWrapper","kind":"attribute"},{"text":" ","kind":"text"},{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"},{"text":"<","kind":"text"},{"text":"State","kind":"genericParameter"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this property wrapper for modeling a feature’s domain that needs to present a child feature","type":"text"},{"text":" ","type":"text"},{"text":"using ","type":"text"},{"code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"For example, if you have a ","type":"text"},{"code":"ChildFeature","type":"codeVoice"},{"text":" reducer that encapsulates the logic and behavior for a","type":"text"},{"text":" ","type":"text"},{"text":"feature, then any feature that wants to present that feature will hold onto ","type":"text"},{"code":"ChildFeature.State","type":"codeVoice"},{"text":" ","type":"text"},{"text":"like so:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct ParentFeature {","  struct State {","    @PresentationState var child: ChildFeature.State?","     \/\/ ...","  }","  \/\/ ...","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the most part your feature’s logic can deal with "},{"type":"codeVoice","code":"child"},{"type":"text","text":" as a plain optional value, but"},{"type":"text","text":" "},{"type":"text","text":"there are times you need to know that you are secretly dealing with "},{"type":"codeVoice","code":"PresentationState"},{"type":"text","text":". For"},{"type":"text","text":" "},{"type":"text","text":"example, when using the "},{"type":"codeVoice","code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"},{"type":"text","text":" reducer operator to"},{"type":"text","text":" "},{"type":"text","text":"integrate the parent and child features together, you will construct a key path to the projected"},{"type":"text","text":" "},{"type":"text","text":"value "},{"type":"codeVoice","code":"\\.$child"},{"type":"text","text":":"}]},{"syntax":"swift","type":"codeListing","code":["@Reducer","struct ParentFeature {","  \/\/ ...","  var body: some ReducerOf<Self> {","    Reduce { state, action in","      \/\/ Core logic for parent feature","    }","    .ifLet(\\.$child, action: \\.child) {","      ChildFeature()","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the dedicated article on "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","type":"reference","isActive":true},{"type":"text","text":" for more information on the library’s navigation"},{"type":"text","text":" "},{"type":"text","text":"tools, and in particular see "},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"reference","isActive":true},{"type":"text","text":" for information on modeling navigation"},{"type":"text","text":" "},{"type":"text","text":"using optionals and enums."}]}]}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"]]},"abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState":{"abstract":[{"text":"A property wrapper for state that can be presented.","type":"text"}],"role":"symbol","title":"PresentationState","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PresentationState","kind":"identifier"}],"navigatorTitle":[{"text":"PresentationState","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/presentationstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(dynamicMember:)-8qv25":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Member"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"preciseIdentifier":"s:s7KeyPathC","kind":"typeIdentifier","text":"KeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV","kind":"typeIdentifier","text":"PresentationState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Member"},{"kind":"text","text":">"}],"role":"symbol","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(dynamicmember:)-8qv25","title":"subscript(dynamicMember:)","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-8qv25","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:_:_:_:_:)":{"abstract":[],"kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:_:_:_:_:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"AnyCasePath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore03AnyA4PathV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Case"},{"kind":"text","text":"?"}],"deprecated":true,"url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:_:_:_:_:)","role":"symbol","title":"subscript(case:_:_:_:_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(dynamicMember:)-4tcjz":{"fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dynamicMember","kind":"externalParam"},{"text":" _: ","kind":"text"},{"text":"CaseKeyPath","kind":"typeIdentifier","preciseIdentifier":"s:13CasePathsCore0A7KeyPatha"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(dynamicmember:)-4tcjz","title":"subscript(dynamicMember:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(dynamicMember:)-4tcjz","abstract":[],"role":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"kind":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","role":"article","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"title":"Tree-based navigation"},"doc://ComposableArchitecture/s17CustomReflectableP":{"type":"unresolvable","title":"Swift.CustomReflectable","identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP"},"doc://ComposableArchitecture/SQ":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ","title":"Swift.Equatable"},"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","title":"Swift.Copyable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP"},"doc://ComposableArchitecture/SE":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SE","title":"Swift.Encodable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/CustomReflectable-Implementations":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/CustomReflectable-Implementations","title":"CustomReflectable Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/presentationstate\/customreflectable-implementations","kind":"article","abstract":[]},"doc://ComposableArchitecture/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/ComposableArchitecture\/SH"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Encodable-Implementations":{"abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Encodable-Implementations","url":"\/documentation\/composablearchitecture\/presentationstate\/encodable-implementations","role":"collectionGroup","title":"Encodable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/projectedValue":{"abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"PresentationState","kind":"typeIdentifier","preciseIdentifier":"s:22ComposableArchitecture17PresentationStateV"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","title":"projectedValue","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/projectedValue","url":"\/documentation\/composablearchitecture\/presentationstate\/projectedvalue"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Presents()":{"kind":"symbol","title":"Presents()","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Presents","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/presents()","role":"symbol","abstract":[{"text":"Wraps a property with ","type":"text"},{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState","isActive":true,"type":"reference"},{"text":" and observes it.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Presents()"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","type":"topic","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Equatable-Implementations":{"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Equatable-Implementations","title":"Equatable Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/composablearchitecture\/presentationstate\/equatable-implementations","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"type":"topic","role":"collectionGroup","kind":"article","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Hashable-Implementations":{"abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Hashable-Implementations","url":"\/documentation\/composablearchitecture\/presentationstate\/hashable-implementations","role":"collectionGroup","title":"Hashable Implementations"},"doc://ComposableArchitecture/Se":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/Se","title":"Swift.Decodable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/Decodable-Implementations":{"role":"collectionGroup","type":"topic","abstract":[],"kind":"article","url":"\/documentation\/composablearchitecture\/presentationstate\/decodable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/Decodable-Implementations","title":"Decodable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/subscript(case:)":{"type":"topic","url":"\/documentation\/composablearchitecture\/presentationstate\/subscript(case:)","fragments":[{"text":"subscript","kind":"keyword"},{"text":"<","kind":"text"},{"text":"Case","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"case","kind":"externalParam"},{"text":" _: ","kind":"text"},{"preciseIdentifier":"s:13CasePathsCore0A7KeyPatha","text":"CaseKeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"abstract":[{"text":"Accesses the value associated with the given case for reading and writing.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/subscript(case:)","kind":"symbol","role":"symbol","title":"subscript(case:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/init(wrappedValue:)":{"kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/init(wrappedValue:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"State"},{"kind":"text","text":"?)"}],"url":"\/documentation\/composablearchitecture\/presentationstate\/init(wrappedvalue:)","abstract":[],"type":"topic","title":"init(wrappedValue:)","role":"symbol"},"doc://ComposableArchitecture/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationState/wrappedValue":{"type":"topic","role":"symbol","abstract":[],"kind":"symbol","title":"wrappedValue","url":"\/documentation\/composablearchitecture\/presentationstate\/wrappedvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"State","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationState\/wrappedValue"}}}