{"kind":"symbol","relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/ComposableArchitecture\/s8SendableP"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/dismisseffect"]}],"abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"],["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)"],"anchor":"Initializers","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)"],"anchor":"Instance-Methods","generated":true}],"metadata":{"title":"DismissEffect","externalID":"s:22ComposableArchitecture13DismissEffectV","symbolKind":"struct","role":"symbol","modules":[{"name":"ComposableArchitecture"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DismissEffect"}],"navigatorTitle":[{"kind":"identifier","text":"DismissEffect"}],"roleHeading":"Structure"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"text":"Execute this in the effect returned from a reducer in order to dismiss the feature:","type":"text"}]},{"type":"codeListing","code":["@Reducer","struct ChildFeature {","  struct State { \/* ... *\/ }","  enum Action {","    case exitButtonTapped","    \/\/ ...","  }","  @Dependency(\\.dismiss) var dismiss","  var body: some Reducer<State, Action> {","    Reduce { state, action in","      switch action {","      case .exitButtonTapped:","        return .run { _ in await self.dismiss() }","      \/\/ ...","      }","    }","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This operation works by finding the nearest parent feature that was presented using either the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Reducer\/ifLet(_:action:destination:fileID:filePath:line:column:)-4ub6q"},{"type":"text","text":" or the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Reducer\/forEach(_:action:destination:fileID:filePath:line:column:)-9svqb"},{"type":"text","text":" operator, and then dismisses "},{"type":"emphasis","inlineContent":[{"type":"text","text":"that"}]},{"type":"text","text":" "},{"type":"text","text":"feature. It performs the dismissal by either sending the "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","isActive":true},{"type":"text","text":" in the"},{"type":"text","text":" "},{"type":"text","text":"case of "},{"type":"codeVoice","code":"ifLet"},{"type":"text","text":" or sending "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","isActive":true},{"type":"text","text":" in the case of "},{"type":"codeVoice","code":"forEach"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"It is also possible to dismiss the feature using an animation by providing an argument to the","type":"text"},{"text":" ","type":"text"},{"code":"dismiss","type":"codeVoice"},{"text":" function:","type":"text"}]},{"type":"codeListing","code":["case .exitButtonTapped:","  return .run { _ in await self.dismiss(animation: .default) }"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This will cause the ","type":"text"},{"type":"codeVoice","code":"dismiss"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"popFrom(id:)"},{"text":" action to be sent with the particular animation.","type":"text"}]},{"style":"warning","type":"aside","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"@Dependency(\\.dismiss)","type":"codeVoice"},{"text":" tool only works for features that are presented using","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"ifLet","type":"codeVoice"},{"text":" operator for tree-based navigation (see ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","type":"reference"},{"text":" for more info)","type":"text"},{"text":" ","type":"text"},{"text":"or ","type":"text"},{"code":"forEach","type":"codeVoice"},{"text":" operator for stack-based navigation (see ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","type":"reference"},{"text":"). If no","type":"text"},{"text":" ","type":"text"},{"text":"parent feature is found that was presented with ","type":"text"},{"code":"ifLet","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"forEach","type":"codeVoice"},{"text":", then a runtime warning","type":"text"},{"text":" ","type":"text"},{"text":"is emitted in Xcode letting you know that it is not possible to dismiss. Further, the runtime","type":"text"},{"text":" ","type":"text"},{"text":"warning becomes a test failure when run in tests.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are testing a child feature in isolation that makes use of "},{"type":"codeVoice","code":"@Dependency(\\.dismiss)"},{"type":"text","text":" "},{"type":"text","text":"then you will need to override the dependency to get a passing test. You can even mutate"},{"type":"text","text":" "},{"type":"text","text":"some shared mutable state inside the "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" closure to confirm that it is indeed invoked:"}]},{"syntax":"swift","code":["let isDismissInvoked: LockIsolated<[Bool]> = .init([])","let store = TestStore(initialState: Child.State()) {","  Child()","} withDependencies: {","  $0.dismiss = DismissEffect { isDismissInvoked.withValue { $0.append(true) } }","}","","await store.send(.exitButtonTapped) {","  \/\/ ...","}","XCTAssertEqual(isDismissInvoked.value, [true])"],"type":"codeListing"}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"Dismissal","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented"],"anchor":"Dismissal","generated":true}],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(animation:fileID:filePath:line:column:)":{"title":"callAsFunction(animation:fileID:filePath:line:column:)","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(animation:fileID:filePath:line:column:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"animation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Animation","preciseIdentifier":"s:7SwiftUI9AnimationV","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(animation:fileid:filepath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/isPresented":{"abstract":[{"type":"text","text":"A Boolean value that indicates whether the current feature is being presented from a parent"},{"type":"text","text":" "},{"type":"text","text":"feature."}],"url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/ispresented","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/isPresented","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isPresented","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"title":"isPresented"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Dependencies/DependencyValues/dismiss":{"abstract":[{"type":"text","text":"An effect that dismisses the current presentation."}],"url":"\/documentation\/composablearchitecture\/dependencies\/dependencyvalues\/dismiss","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Dependencies\/DependencyValues\/dismiss","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dismiss","kind":"identifier"},{"text":": ","kind":"text"},{"text":"DismissEffect","preciseIdentifier":"s:22ComposableArchitecture13DismissEffectV","kind":"typeIdentifier"}],"title":"dismiss"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"type":"topic","role":"collectionGroup","kind":"article","title":"Navigation"},"doc://ComposableArchitecture/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/ComposableArchitecture\/s8SendableP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(fileID:filePath:line:column:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(fileID:filePath:line:column:)","role":"symbol","abstract":[],"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(fileid:filepath:line:column:)","title":"callAsFunction(fileID:filePath:line:column:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"("},{"kind":"externalParam","text":"fileID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filePath"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"column"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","type":"topic","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackBasedNavigation":{"type":"topic","title":"Stack-based navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackBasedNavigation","kind":"article","url":"\/documentation\/composablearchitecture\/stackbasednavigation","abstract":[{"text":"Learn about stack-based navigation, that is navigation modeled with collections, including how to","type":"text"},{"text":" ","type":"text"},{"text":"model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect":{"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DismissEffect","kind":"identifier"}],"title":"DismissEffect","kind":"symbol","abstract":[{"text":"An effect that dismisses the current presentation.","type":"text"}],"url":"\/documentation\/composablearchitecture\/dismisseffect","role":"symbol","navigatorTitle":[{"text":"DismissEffect","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/callAsFunction(transaction:fileID:filePath:line:column:)":{"abstract":[],"url":"\/documentation\/composablearchitecture\/dismisseffect\/callasfunction(transaction:fileid:filepath:line:column:)","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/callAsFunction(transaction:fileID:filePath:line:column:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"(","kind":"text"},{"text":"transaction","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Transaction","preciseIdentifier":"s:7SwiftUI11TransactionV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"fileID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"filePath","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"column","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","preciseIdentifier":"s:Su","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"}],"title":"callAsFunction(transaction:fileID:filePath:line:column:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DismissEffect/init(_:)":{"title":"init(_:)","abstract":[],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DismissEffect\/init(_:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/composablearchitecture\/dismisseffect\/init(_:)"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PresentationAction/dismiss":{"title":"PresentationAction.dismiss","abstract":[{"text":"An action sent to ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" out the associated presentation state.","type":"text"}],"type":"topic","url":"\/documentation\/composablearchitecture\/presentationaction\/dismiss","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PresentationAction\/dismiss","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dismiss","kind":"identifier"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TreeBasedNavigation":{"kind":"article","url":"\/documentation\/composablearchitecture\/treebasednavigation","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TreeBasedNavigation","role":"article","abstract":[{"text":"Learn about tree-based navigation, that is navigation modeled with optionals and enums, including","type":"text"},{"text":" ","type":"text"},{"text":"how to model your domains, how to integrate features, how to test your features, and more.","type":"text"}],"title":"Tree-based navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/StackAction/popFrom(id:)":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/StackAction\/popFrom(id:)","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFrom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture14StackElementIDV","kind":"typeIdentifier","text":"StackElementID"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"An action sent to dismiss the associated stack element at a given identifier."}],"kind":"symbol","title":"StackAction.popFrom(id:)","url":"\/documentation\/composablearchitecture\/stackaction\/popfrom(id:)"}}}