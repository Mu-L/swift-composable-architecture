{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/exhaustivity\/off(showskippedassertions:)"]}],"metadata":{"roleHeading":"Case","symbolKind":"case","title":"Exhaustivity.off(showSkippedAssertions:)","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"off","kind":"identifier"},{"text":"(","kind":"text"},{"text":"showSkippedAssertions","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","externalID":"s:22ComposableArchitecture12ExhaustivityO3offyACSb_tcACmF","modules":[{"name":"ComposableArchitecture"}]},"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity"]]},"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off(showSkippedAssertions:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"text":"Non-exhaustive assertions.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"off"},{"kind":"text","text":"("},{"kind":"externalParam","text":"showSkippedAssertions"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"platforms":["macOS"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"When ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", skipped assertions will be reported as","type":"text"},{"text":" ","type":"text"},{"text":"expected failures.","type":"text"}],"type":"paragraph"}],"name":"showSkippedAssertions"}],"kind":"parameters"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This settings allows you to assert on any subset of state changes and actions received from","type":"text"},{"text":" ","type":"text"},{"text":"effects.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"When configured to ","type":"text"},{"code":"showSkippedAssertions","type":"codeVoice"},{"text":", any state not asserted on or received actions","type":"text"},{"text":" ","type":"text"},{"text":"skipped will be reported in a grey informational box next to the assertion. This is handy for","type":"text"},{"text":" ","type":"text"},{"text":"when you want non-exhaustivity but you still want to know what all you are missing from your","type":"text"},{"text":" ","type":"text"},{"text":"assertions.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity/off(showSkippedAssertions:)":{"title":"Exhaustivity.off(showSkippedAssertions:)","abstract":[{"type":"text","text":"Non-exhaustive assertions."}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"off","kind":"identifier"},{"text":"(","kind":"text"},{"text":"showSkippedAssertions","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity\/off(showSkippedAssertions:)","type":"topic","url":"\/documentation\/composablearchitecture\/exhaustivity\/off(showskippedassertions:)","kind":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Exhaustivity":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Exhaustivity","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Exhaustivity"}],"type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Exhaustivity"}],"url":"\/documentation\/composablearchitecture\/exhaustivity","title":"Exhaustivity","abstract":[{"text":"The exhaustivity of assertions made by the test store.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore/exhaustivity":{"type":"topic","title":"exhaustivity","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"exhaustivity"},{"kind":"text","text":": "},{"preciseIdentifier":"s:22ComposableArchitecture12ExhaustivityO","kind":"typeIdentifier","text":"Exhaustivity"}],"abstract":[{"type":"text","text":"The current exhaustivity level of the test store."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore\/exhaustivity","kind":"symbol","url":"\/documentation\/composablearchitecture\/teststore\/exhaustivity"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/composablearchitecture\/teststore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"title":"TestStore"}}}