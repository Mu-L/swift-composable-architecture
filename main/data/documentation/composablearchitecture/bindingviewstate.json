{"topicSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)"],"anchor":"Subscripts","title":"Subscripts","generated":true},{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"sections":[],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"BindingViewState"}],"modules":[{"name":"ComposableArchitecture"}],"symbolKind":"struct","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewState"}],"role":"symbol","title":"BindingViewState","externalID":"s:22ComposableArchitecture16BindingViewStateV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@dynamicMemberLookup"},{"kind":"text","text":" "},{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewState"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Read ","type":"text"},{"isActive":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","type":"reference"},{"text":" for more information.","type":"text"}]}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"],"anchor":"Bindings","title":"Bindings","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","doc:\/\/ComposableArchitecture\/s8CopyableP","doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP","doc:\/\/ComposableArchitecture\/s17CustomReflectableP","doc:\/\/ComposableArchitecture\/SQ","doc:\/\/ComposableArchitecture\/SH"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingviewstate"]}],"abstract":[{"type":"text","text":"A property wrapper type that can designate properties of view state that can be directly"},{"type":"text","text":" "},{"type":"text","text":"bindable in SwiftUI views."}],"references":{"doc://ComposableArchitecture/s8CopyableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s8CopyableP","title":"Swift.Copyable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/subscript(dynamicMember:)":{"title":"subscript(dynamicMember:)","type":"topic","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Subject"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dynamicMember"},{"kind":"text","text":" _: "},{"preciseIdentifier":"s:s15WritableKeyPathC","kind":"typeIdentifier","text":"WritableKeyPath"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:22ComposableArchitecture16BindingViewStateV","kind":"typeIdentifier","text":"BindingViewState"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Subject"},{"kind":"text","text":">"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate\/subscript(dynamicmember:)","kind":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/subscript(dynamicMember:)"},"doc://ComposableArchitecture/10CustomDump0aB13RepresentableP":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/10CustomDump0aB13RepresentableP","title":"CustomDump.CustomDumpRepresentable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/SH":{"type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SH","title":"Swift.Hashable"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Bindings":{"abstract":[{"text":"Learn how to connect features written in the Composable Architecture to SwiftUI bindings.","type":"text"}],"role":"article","title":"Working with SwiftUI bindings","type":"topic","url":"\/documentation\/composablearchitecture\/bindings","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Bindings","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDebugStringConvertible-Implementations":{"abstract":[],"role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdebugstringconvertible-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/projectedValue":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI7BindingV","text":"Binding","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[],"role":"symbol","title":"projectedValue","url":"\/documentation\/composablearchitecture\/bindingviewstate\/projectedvalue","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/projectedValue","kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomReflectable-Implementations":{"url":"\/documentation\/composablearchitecture\/bindingviewstate\/customreflectable-implementations","title":"CustomReflectable Implementations","role":"collectionGroup","abstract":[],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomReflectable-Implementations","type":"topic","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","role":"collectionGroup","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ViewStore":{"kind":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ViewStore","kind":"identifier"}],"url":"\/documentation\/composablearchitecture\/viewstore","title":"ViewStore","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ViewStore"},{"text":" is an object that can observe state changes and send actions. They are most","type":"text"},{"text":" ","type":"text"},{"text":"commonly used in views, such as SwiftUI views, UIView or UIViewController, but they can be used","type":"text"},{"text":" ","type":"text"},{"text":"anywhere it makes sense to observe state or send actions.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ViewStore","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","deprecated":true},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewStore":{"abstract":[{"type":"text","text":"A property wrapper type that can derive "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","isActive":true},{"type":"text","text":" values for a "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ViewStore","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"BindingViewStore"}],"url":"\/documentation\/composablearchitecture\/bindingviewstore","type":"topic","kind":"symbol","title":"BindingViewStore","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingViewStore"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewStore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Equatable-Implementations":{"type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate\/equatable-implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Equatable-Implementations","abstract":[],"title":"Equatable Implementations","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/SQ"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/wrappedValue":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/wrappedValue","type":"topic","title":"wrappedValue","url":"\/documentation\/composablearchitecture\/bindingviewstate\/wrappedvalue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"abstract":[],"role":"symbol","kind":"symbol"},"doc://ComposableArchitecture/s17CustomReflectableP":{"title":"Swift.CustomReflectable","identifier":"doc:\/\/ComposableArchitecture\/s17CustomReflectableP","type":"unresolvable"},"doc://ComposableArchitecture/s28CustomDebugStringConvertibleP":{"title":"Swift.CustomDebugStringConvertible","type":"unresolvable","identifier":"doc:\/\/ComposableArchitecture\/s28CustomDebugStringConvertibleP"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingState":{"abstract":[{"text":"A property wrapper type that can designate properties of app state that can be directly bindable","type":"text"},{"text":" ","type":"text"},{"text":"in SwiftUI views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/bindingstate","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingState","deprecated":true,"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingState","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"BindingState","kind":"identifier"}],"title":"BindingState"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIDeprecations":{"title":"Deprecations","kind":"article","role":"collectionGroup","url":"\/documentation\/composablearchitecture\/swiftuideprecations","type":"topic","abstract":[{"text":"Review unsupported SwiftUI APIs and their replacements.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIDeprecations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState":{"navigatorTitle":[{"text":"BindingViewState","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState","kind":"symbol","role":"symbol","title":"BindingViewState","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BindingViewState","kind":"identifier"}],"abstract":[{"text":"A property wrapper type that can designate properties of view state that can be directly","type":"text"},{"text":" ","type":"text"},{"text":"bindable in SwiftUI views.","type":"text"}],"url":"\/documentation\/composablearchitecture\/bindingviewstate"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/CustomDumpRepresentable-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/CustomDumpRepresentable-Implementations","type":"topic","url":"\/documentation\/composablearchitecture\/bindingviewstate\/customdumprepresentable-implementations","title":"CustomDumpRepresentable Implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingViewState/Hashable-Implementations":{"type":"topic","title":"Hashable Implementations","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingViewState\/Hashable-Implementations","url":"\/documentation\/composablearchitecture\/bindingviewstate\/hashable-implementations","kind":"article","abstract":[],"role":"collectionGroup"}}}