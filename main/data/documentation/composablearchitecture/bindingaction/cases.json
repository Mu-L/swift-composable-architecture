{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/Cases"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture\/bindingaction\/cases"]}],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"CasePathable.Cases","type":"codeVoice"},{"text":".","type":"text"}],"metadata":{"title":"BindingAction.Cases","symbolKind":"typealias","modules":[{"name":"ComposableArchitecture","relatedModules":["CasePathsCore"]}],"externalID":"s:13CasePathsCore0A8PathablePAAE5Casesa::SYNTHESIZED::s:22ComposableArchitecture13BindingActionV","roleHeading":"Type Alias","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cases","kind":"identifier"}],"extendedModule":"CasePathsCore","navigatorTitle":[{"text":"Cases","kind":"identifier"}],"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cases","kind":"identifier"},{"text":" = ","kind":"text"},{"text":"Case","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/CasePathable-Implementations"]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","role":"collectionGroup","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction":{"abstract":[{"text":"An action that describes simple mutations to some root state at a writable key path.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction","title":"BindingAction","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"BindingAction"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BindingAction"}],"url":"\/documentation\/composablearchitecture\/bindingaction","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction/CasePathable-Implementations":{"abstract":[],"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/CasePathable-Implementations","title":"CasePathable Implementations","url":"\/documentation\/composablearchitecture\/bindingaction\/casepathable-implementations"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/BindingAction/Cases":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cases"}],"navigatorTitle":[{"kind":"identifier","text":"Cases"}],"url":"\/documentation\/composablearchitecture\/bindingaction\/cases","title":"BindingAction.Cases","role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/BindingAction\/Cases","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"}}}