{"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","abstract":[{"type":"text","text":"The collection of videos from "},{"type":"reference","identifier":"https:\/\/www.pointfree.co","isActive":true},{"type":"text","text":" that dive deep into the"},{"type":"text","text":" "},{"type":"text","text":"development of the library."}],"identifiers":["https:\/\/www.pointfree.co\/collections\/composable-architecture"]}],"sections":[],"identifier":{"url":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"topicSections":[{"anchor":"Essentials","title":"Essentials","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ"]},{"anchor":"Tutorials","title":"Tutorials","identifiers":["doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps"]},{"anchor":"State-management","title":"State management","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState"]},{"anchor":"Testing","title":"Testing","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA"]},{"anchor":"Integrations","title":"Integrations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit"]},{"anchor":"Migration-guides","title":"Migration guides","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides"]},{"anchor":"Structures","title":"Structures","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey"],"generated":true},{"anchor":"Functions","title":"Functions","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()"],"generated":true},{"anchor":"Enumerations","title":"Enumerations","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction"],"generated":true},{"anchor":"Extended-Modules","title":"Extended Modules","identifiers":["doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore"],"generated":true}],"kind":"symbol","metadata":{"symbolKind":"module","modules":[{"name":"ComposableArchitecture"}],"role":"collection","externalID":"ComposableArchitecture","roleHeading":"Framework","title":"ComposableArchitecture"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Additional Resources","anchor":"Additional-Resources"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","type":"reference"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","type":"reference"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"text":"This library provides a few core tools that can be used to build applications of varying purpose and","type":"text"},{"text":" ","type":"text"},{"text":"complexity. It provides compelling stories that you can follow to solve many problems you encounter","type":"text"},{"text":" ","type":"text"},{"text":"day-to-day when building applications, such as:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"State management"}],"type":"strong"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"How to manage the state of your application using simple value types, and share state across"},{"type":"text","text":" "},{"type":"text","text":"many screens so that mutations in one screen can be immediately observed in another screen."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Composition","type":"text"}]}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"How to break down large features into smaller components that can be extracted to their own,"},{"type":"text","text":" "},{"type":"text","text":"isolated modules and be easily glued back together to form the feature."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Side effects"}],"type":"strong"}]},{"type":"paragraph","inlineContent":[{"text":"How to let certain parts of the application talk to the outside world in the most testable and","type":"text"},{"text":" ","type":"text"},{"text":"understandable way possible.","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Testing","type":"text"}],"type":"strong"}],"type":"paragraph"},{"inlineContent":[{"text":"How to not only test a feature built in the architecture, but also write integration tests for","type":"text"},{"text":" ","type":"text"},{"text":"features that have been composed of many parts, and write end-to-end tests to understand how","type":"text"},{"text":" ","type":"text"},{"text":"side effects influence your application. This allows you to make strong guarantees that your","type":"text"},{"text":" ","type":"text"},{"text":"business logic is running in the way you expect.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Ergonomics","type":"text"}]}]},{"type":"paragraph","inlineContent":[{"text":"How to accomplish all of the above in a simple API with as few concepts and moving parts as","type":"text"},{"text":" ","type":"text"},{"text":"possible.","type":"text"}]}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/composablearchitecture"]}],"hierarchy":{"paths":[[]]},"references":{"doc://ComposableArchitecture/documentation/ComposableArchitecture/MigrationGuides":{"url":"\/documentation\/composablearchitecture\/migrationguides","abstract":[{"text":"Learn how to upgrade your application to the newest version of the Composable Architecture.","type":"text"}],"type":"topic","title":"Migration guides","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/MigrationGuides","kind":"article","role":"collectionGroup"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/InMemoryFileStorage()":{"url":"\/documentation\/composablearchitecture\/inmemoryfilestorage()","abstract":[],"type":"topic","title":"InMemoryFileStorage()","deprecated":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"InMemoryFileStorage"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"FileStorage","preciseIdentifier":"s:7Sharing11FileStorageV"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/InMemoryFileStorage()","kind":"symbol","role":"symbol"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Sharing":{"abstract":[],"role":"collection","kind":"symbol","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Sharing","title":"Sharing","url":"\/documentation\/composablearchitecture\/sharing"},"doc://ComposableArchitecture/documentation/ComposableArchitecture":{"title":"ComposableArchitecture","type":"topic","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a consistent"},{"type":"text","text":" "},{"type":"text","text":"and understandable way, with composition, testing, and ergonomics in mind. It can be used in"},{"type":"text","text":" "},{"type":"text","text":"SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"kind":"symbol","url":"\/documentation\/composablearchitecture","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Effect":{"abstract":[],"kind":"symbol","url":"\/documentation\/composablearchitecture\/effect","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Effect"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","role":"symbol","type":"topic","title":"Effect","navigatorTitle":[{"kind":"identifier","text":"Effect"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/UIKit":{"role":"collectionGroup","title":"UIKit Integration","type":"topic","url":"\/documentation\/composablearchitecture\/uikit","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/UIKit","kind":"article","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a UIKit application."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftNavigation":{"title":"SwiftNavigation","url":"\/documentation\/composablearchitecture\/swiftnavigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftNavigation","role":"collection","type":"topic","abstract":[],"kind":"symbol"},"doc://ComposableArchitecture/tutorials/MeetComposableArchitecture":{"title":"Meet the Composable Architecture","abstract":[{"type":"text","text":"The Composable Architecture (TCA, for short) is a library for building applications in a"},{"type":"text","text":" "},{"type":"text","text":"consistent and understandable way, with composition, testing, and ergonomics in mind. It can be"},{"type":"text","text":" "},{"type":"text","text":"used in SwiftUI, UIKit, and more, and on any Apple platform (iOS, macOS, tvOS, and watchOS)."}],"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/MeetComposableArchitecture","url":"\/tutorials\/meetcomposablearchitecture","kind":"overview","role":"overview","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/AppStorageKeyPathKey":{"navigatorTitle":[{"text":"AppStorageKeyPathKey","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/AppStorageKeyPathKey","deprecated":true,"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AppStorageKeyPathKey","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/composablearchitecture\/appstoragekeypathkey","title":"AppStorageKeyPathKey","type":"topic","abstract":[{"type":"text","text":"A type defining a user defaults persistence strategy via key path."}]},"https://www.pointfree.co/collections/composable-architecture":{"title":"Point-Free Videos","url":"https:\/\/www.pointfree.co\/collections\/composable-architecture","identifier":"https:\/\/www.pointfree.co\/collections\/composable-architecture","titleInlineContent":[{"type":"text","text":"Point-Free Videos"}],"type":"link"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Performance":{"role":"article","title":"Performance","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Performance","abstract":[{"text":"Learn how to improve the performance of features built in the Composable Architecture.","type":"text"}],"url":"\/documentation\/composablearchitecture\/performance","kind":"article","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Reducer":{"role":"symbol","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Reducer","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Reducer"}],"url":"\/documentation\/composablearchitecture\/reducer","abstract":[{"type":"text","text":"A protocol that describes how to evolve the current state of an application to the next state,"},{"type":"text","text":" "},{"type":"text","text":"given an action, and describes what "},{"type":"reference","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Effect","isActive":true},{"type":"text","text":"s should be executed later by the store, if any."}],"navigatorTitle":[{"kind":"identifier","text":"Reducer"}],"type":"topic","title":"Reducer"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Store":{"url":"\/documentation\/composablearchitecture\/store","type":"topic","abstract":[{"text":"A store represents the runtime that powers the application. It is the object that you will pass","type":"text"},{"text":" ","type":"text"},{"text":"around to views that need to interact with the application.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Store","kind":"identifier"}],"title":"Store","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"Store","kind":"identifier"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Store"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/GettingStarted":{"type":"topic","role":"article","title":"Getting started","abstract":[{"text":"Learn how to integrate the Composable Architecture into your project and write your first","type":"text"},{"text":" ","type":"text"},{"text":"application.","type":"text"}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/GettingStarted","url":"\/documentation\/composablearchitecture\/gettingstarted","kind":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftConcurrency":{"kind":"article","title":"Adopting Swift concurrency","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftConcurrency","abstract":[{"text":"Learn how to write safe, concurrent effects using Swift’s structured concurrency.","type":"text"}],"url":"\/documentation\/composablearchitecture\/swiftconcurrency","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/DependencyManagement":{"abstract":[{"type":"text","text":"Learn how to register dependencies with the library so that they can be immediately accessible from"},{"type":"text","text":" "},{"type":"text","text":"any reducer."}],"title":"Dependencies","url":"\/documentation\/composablearchitecture\/dependencymanagement","kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/DependencyManagement","type":"topic","role":"article"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/PerceptionCore":{"kind":"symbol","title":"PerceptionCore","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/PerceptionCore","type":"topic","abstract":[],"url":"\/documentation\/composablearchitecture\/perceptioncore","role":"collection"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUICore":{"kind":"symbol","abstract":[],"type":"topic","role":"collection","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUICore","url":"\/documentation\/composablearchitecture\/swiftuicore","title":"SwiftUICore"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/ObservationBackport":{"role":"article","type":"topic","title":"Observation backport","url":"\/documentation\/composablearchitecture\/observationbackport","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/ObservationBackport","kind":"article","abstract":[{"type":"text","text":"Learn how the Observation framework from Swift 5.9 was backported to support iOS 16 and earlier,"},{"type":"text","text":" "},{"type":"text","text":"as well as the caveats of using the backported tools."}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SharingState":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SharingState","role":"article","title":"Sharing state","kind":"article","url":"\/documentation\/composablearchitecture\/sharingstate","abstract":[{"text":"Learn techniques for sharing state throughout many parts of your application, and how to persist","type":"text"},{"text":" ","type":"text"},{"text":"data to user defaults, the file system, and other external mediums.","type":"text"}],"type":"topic"},"https://github.com/pointfreeco/swift-composable-architecture/discussions":{"identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","type":"link","title":"Discussions","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture\/discussions","titleInlineContent":[{"text":"Discussions","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/Navigation":{"url":"\/documentation\/composablearchitecture\/navigation","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/Navigation","abstract":[{"type":"text","text":"Learn how to use the navigation tools in the library, including how to best model your domains, how"},{"type":"text","text":" "},{"type":"text","text":"to integrate features in the reducer and view layers, and how to write tests."}],"type":"topic","role":"collectionGroup","kind":"article","title":"Navigation"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestingTCA":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestingTCA","role":"article","title":"Testing","kind":"article","url":"\/documentation\/composablearchitecture\/testingtca","abstract":[{"text":"Learn how to write comprehensive and exhaustive tests for your features built in the Composable","type":"text"},{"text":" ","type":"text"},{"text":"Architecture.","type":"text"}],"type":"topic"},"https://github.com/pointfreeco/swift-composable-architecture":{"title":"GitHub Repo","identifier":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","type":"link","url":"https:\/\/github.com\/pointfreeco\/swift-composable-architecture","titleInlineContent":[{"text":"GitHub Repo","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/FAQ":{"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/FAQ","role":"article","title":"Frequently asked questions","kind":"article","url":"\/documentation\/composablearchitecture\/faq","abstract":[{"text":"A collection of some of the most common questions and comments people have concerning the library.","type":"text"}],"type":"topic"},"doc://ComposableArchitecture/tutorials/BuildingSyncUps":{"identifier":"doc:\/\/ComposableArchitecture\/tutorials\/BuildingSyncUps","url":"\/tutorials\/buildingsyncups","title":"Building SyncUps","type":"topic","role":"overview","kind":"overview","abstract":[{"text":"The SyncUps application is a recreation of one of Apple’s more interesting demo applications,","type":"text"},{"text":" ","type":"text"},{"text":"Scrumdinger. We recreate it from scratch using the Composable Architecture, with a focus on","type":"text"},{"text":" ","type":"text"},{"text":"domain modeling, controlling dependencies, and testability.","type":"text"}]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/LiveFileStorage()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"LiveFileStorage"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Sharing11FileStorageV","text":"FileStorage"}],"deprecated":true,"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/LiveFileStorage()","role":"symbol","kind":"symbol","title":"LiveFileStorage()","url":"\/documentation\/composablearchitecture\/livefilestorage()","type":"topic","abstract":[]},"doc://ComposableArchitecture/documentation/ComposableArchitecture/IdentifiedAction":{"url":"\/documentation\/composablearchitecture\/identifiedaction","title":"IdentifiedAction","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdentifiedAction"}],"navigatorTitle":[{"kind":"identifier","text":"IdentifiedAction"}],"abstract":[{"type":"text","text":"A wrapper type for actions that can be presented in a list."}],"identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/IdentifiedAction","role":"symbol","kind":"symbol","type":"topic"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/SwiftUIIntegration":{"url":"\/documentation\/composablearchitecture\/swiftuiintegration","type":"topic","role":"collectionGroup","title":"SwiftUI Integration","abstract":[{"type":"text","text":"Integrating the Composable Architecture into a SwiftUI application."}],"kind":"article","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/SwiftUIIntegration"},"doc://ComposableArchitecture/documentation/ComposableArchitecture/TestStore":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestStore"}],"url":"\/documentation\/composablearchitecture\/teststore","type":"topic","identifier":"doc:\/\/ComposableArchitecture\/documentation\/ComposableArchitecture\/TestStore","kind":"symbol","abstract":[{"text":"A testable runtime for a reducer.","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"TestStore"}],"title":"TestStore"}}}